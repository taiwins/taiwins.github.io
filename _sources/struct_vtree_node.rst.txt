.. index:: pair: struct; vtree_node
.. _doxid-d7/d47/structvtree__node:

struct vtree_node
=================

.. toctree::
	:hidden:

Overview
~~~~~~~~

a variable length tree node implementation. :ref:`More...<details-d7/d47/structvtree__node>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <tree.h>
	
	struct vtree_node
	{
		// fields
	
		:ref:`vector_t<doxid-d3/d8b/structvector__t>` :target:`children<doxid-d7/d47/structvtree__node_1ac7972a92bcc4e19d1e6ca0e71a99f8e4>`;
		struct vtree_node* :target:`parent<doxid-d7/d47/structvtree__node_1acc3d4722c6727759207a1c062227c788>`;
		off_t :target:`offset<doxid-d7/d47/structvtree__node_1a053d002f0073941671c5253a47de1c34>`;
	};
.. _details-d7/d47/structvtree__node:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

a variable length tree node implementation.

It is not very efficient since each node holds a piece of memory, it is not a search tree, so the struture of tree reflects the structure of the data at runtime.

The usage of the :ref:`vtree_node <doxid-d7/d47/structvtree__node>` is embedding it in your own type. The @offset is used to locate :ref:`vtree_node <doxid-d7/d47/structvtree__node>` as a subtype. In otherwords, the @children should be a vector of ``:ref:`vtree_node <doxid-d7/d47/structvtree__node>` *``. The depth of the tree shouldn't be too deep coz some methods are implemented recursively

TODO: provide a make static method. To move all the children in the same vector

